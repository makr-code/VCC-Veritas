# ======================================================================
# VERITAS Framework - Worker Dockerfile
# Optimized for background task processing
# ======================================================================

FROM python:3.11-slim

LABEL maintainer="VERITAS Team <veritas@example.com>" \
      description="VERITAS Framework - Worker Service" \
      version="1.0.0"

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r veritas && useradd -r -g veritas -u 1001 veritas

WORKDIR /app

# Copy requirements
COPY requirements.txt backend/requirements.txt ./

# Install dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r backend/requirements.txt && \
    pip install --no-cache-dir celery[redis]

# Copy application code
COPY --chown=veritas:veritas . /app

# Create directories
RUN mkdir -p /app/logs /app/data && \
    chown -R veritas:veritas /app

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    VERITAS_ENV=production \
    VERITAS_LOG_LEVEL=INFO

USER veritas

# Health check for worker
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=3 \
    CMD python -c "from backend.services.worker_health import check_health; check_health()" || exit 1

# Start Celery worker
CMD ["celery", "-A", "backend.services.celery_app", "worker", "--loglevel=info", "--concurrency=4"]
