# ======================================================================
# VERITAS Helm Chart - Default Values
# Override these values for different environments
# ======================================================================

# Global settings
global:
  environment: production
  imageRegistry: ""
  imagePullSecrets: []

# Application settings
app:
  name: veritas
  version: "1.0.0"

# API service
api:
  enabled: true
  replicaCount: 3
  
  image:
    repository: veritas/api
    tag: latest
    pullPolicy: Always
  
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 2000m
      memory: 2Gi
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  livenessProbe:
    httpGet:
      path: /api/v1/health
      port: 8000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /api/v1/health
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Worker service
worker:
  enabled: true
  replicaCount: 2
  
  image:
    repository: veritas/worker
    tag: latest
    pullPolicy: Always
  
  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 4000m
      memory: 4Gi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 85

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: veritas-api
    nginx.ingress.kubernetes.io/rate-limit: "100"
  
  hosts:
    - host: api.veritas.example.com
      paths:
        - path: /
          pathType: Prefix
  
  tls:
    - secretName: veritas-tls-cert
      hosts:
        - api.veritas.example.com

# Configuration
config:
  # Application settings
  veritas:
    env: production
    logLevel: INFO
    logFormat: json
  
  # API settings
  api:
    version: v1
    prefix: /api/v1
    enableCors: true
    corsOrigins: "https://veritas.example.com"
  
  # Worker settings
  worker:
    concurrency: 4
    prefetchMultiplier: 4
    maxTasksPerChild: 1000
  
  # Database settings
  database:
    poolSize: 20
    maxOverflow: 10
    poolTimeout: 30
    poolRecycle: 3600
  
  # Redis settings
  redis:
    maxConnections: 50
    socketTimeout: 5
    socketConnectTimeout: 5
  
  # Rate limiting
  rateLimit:
    enabled: true
    default: "100/minute"
    auth: "5/minute"
  
  # Session settings
  session:
    lifetime: 3600  # 1 hour
    refreshLifetime: 2592000  # 30 days
  
  # File upload
  upload:
    maxSize: 104857600  # 100MB
    allowedExtensions: ".pdf,.docx,.txt,.md"
  
  # Agent execution
  agent:
    timeout: 300  # 5 minutes
    maxConcurrent: 10
  
  # Quality settings
  quality:
    threshold: 0.7
    enableAutoReview: true
  
  # Monitoring
  monitoring:
    metricsEnabled: true
    tracingEnabled: true
    tracingSampleRate: 0.1

# Secrets (override in production)
secrets:
  # Database credentials
  database:
    host: "postgres.veritas-production.svc.cluster.local"
    port: "5432"
    name: "veritas_production"
    user: "veritas_user"
    password: "CHANGE_ME_IN_PRODUCTION"
  
  # Redis credentials
  redis:
    host: "redis.veritas-production.svc.cluster.local"
    port: "6379"
    password: "CHANGE_ME_IN_PRODUCTION"
  
  # JWT configuration
  jwt:
    secretKey: "CHANGE_ME_IN_PRODUCTION_USE_STRONG_RANDOM_STRING"
    algorithm: "HS256"
  
  # API keys
  apiKeys:
    admin: "CHANGE_ME_IN_PRODUCTION"
  
  # Encryption
  encryption:
    key: "CHANGE_ME_IN_PRODUCTION_32_BYTES_KEY"

# Persistent storage
persistence:
  enabled: true
  
  uploads:
    enabled: true
    storageClass: "standard"
    accessMode: ReadWriteMany
    size: 50Gi
  
  data:
    enabled: true
    storageClass: "standard"
    accessMode: ReadWriteMany
    size: 100Gi

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod security
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  capabilities:
    drop:
    - ALL

# Node selection
nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - veritas
          - key: component
            operator: In
            values:
            - api
        topologyKey: kubernetes.io/hostname
