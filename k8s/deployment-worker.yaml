# ======================================================================
# VERITAS Framework - Worker Deployment
# Background task processing
# ======================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: veritas-worker
  namespace: veritas-production
  labels:
    app: veritas
    component: worker
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: veritas
      component: worker
  template:
    metadata:
      labels:
        app: veritas
        component: worker
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: veritas-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      
      containers:
      - name: worker
        image: veritas/worker:latest
        imagePullPolicy: Always
        
        envFrom:
        - configMapRef:
            name: veritas-config
        - secretRef:
            name: veritas-secrets
        
        resources:
          requests:
            cpu: 1000m
            memory: 1Gi
          limits:
            cpu: 4000m
            memory: 4Gi
        
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "from backend.services.worker_health import check_health; check_health()"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: data
          mountPath: /app/data
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      
      volumes:
      - name: logs
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: veritas-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: veritas-worker
  namespace: veritas-staging
  labels:
    app: veritas
    component: worker
    version: v1
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: veritas
      component: worker
  template:
    metadata:
      labels:
        app: veritas
        component: worker
        version: v1
    spec:
      serviceAccountName: veritas-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      
      containers:
      - name: worker
        image: veritas/worker:staging
        imagePullPolicy: Always
        
        envFrom:
        - configMapRef:
            name: veritas-config
        - secretRef:
            name: veritas-secrets
        
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: data
          mountPath: /app/data
      
      volumes:
      - name: logs
        emptyDir: {}
      - name: data
        emptyDir: {}
